# Generated by Django 4.2.7 on 2025-09-01 14:17

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Session title', max_length=255)),
                ('description', models.TextField(help_text='Detailed session description')),
                ('session_type', models.CharField(choices=[('keynote', 'Keynote'), ('workshop', 'Workshop'), ('panel', 'Panel Discussion'), ('qna', 'Q&A Session')], default='keynote', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('live', 'Live'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_date', models.DateTimeField(help_text='When the session is scheduled')),
                ('duration_minutes', models.IntegerField(default=60, help_text='Session duration in minutes')),
                ('meeting_link', models.URLField(blank=True, help_text='Zoom, Google Meet, or platform link')),
                ('meeting_platform', models.CharField(blank=True, help_text='Platform used for the session (Zoom, Google Meet, etc.)', max_length=50)),
                ('topics', models.JSONField(blank=True, default=list, help_text='List of topics covered in this session')),
                ('max_participants', models.IntegerField(default=100, help_text='Maximum number of participants allowed')),
                ('is_public', models.BooleanField(default=True, help_text='Whether session is publicly visible')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'db_table': 'sessions_session',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='SessionFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rating from 1 to 5')),
                ('comment', models.TextField(blank=True, help_text='Optional feedback comment')),
                ('content_quality', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('speaker_effectiveness', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('technical_quality', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Session Feedback',
                'verbose_name_plural': 'Session Feedback',
                'db_table': 'sessions_feedback',
            },
        ),
        migrations.CreateModel(
            name='SessionRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recording_url', models.URLField(help_text='URL to the recorded session')),
                ('thumbnail_url', models.URLField(blank=True, help_text='Thumbnail image for the recording')),
                ('duration_seconds', models.IntegerField(help_text='Recording duration in seconds')),
                ('processing_status', models.CharField(choices=[('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='processing', max_length=20)),
                ('views_count', models.IntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recording', to='learning_sessions.session')),
            ],
            options={
                'verbose_name': 'Session Recording',
                'verbose_name_plural': 'Session Recordings',
                'db_table': 'sessions_recording',
            },
        ),
        migrations.CreateModel(
            name='SessionParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('attendee', 'Attendee'), ('speaker', 'Speaker'), ('moderator', 'Moderator'), ('observer', 'Observer')], default='attendee', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('duration_attended', models.IntegerField(default=0, help_text='Total minutes attended')),
                ('asked_questions', models.IntegerField(default=0)),
                ('provided_feedback', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='learning_sessions.session')),
            ],
            options={
                'verbose_name': 'Session Participant',
                'verbose_name_plural': 'Session Participants',
                'db_table': 'sessions_participant',
            },
        ),
    ]
