# Generated by Django 4.2.7 on 2025-09-01 14:17

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Community name', max_length=255, unique=True)),
                ('description', models.TextField(help_text='Community description')),
                ('community_type', models.CharField(choices=[('institution', 'Institution'), ('subject', 'Subject Matter'), ('professional', 'Professional Network'), ('interest', 'Interest Group')], default='subject', max_length=20)),
                ('category', models.CharField(help_text='Main category (e.g., Web Dev, AI/ML, DevOps)', max_length=100)),
                ('institution', models.CharField(blank=True, help_text='Educational institution name (if institution-based)', max_length=255)),
                ('is_public', models.BooleanField(default=True, help_text='Whether community is publicly visible')),
                ('is_active', models.BooleanField(default=True, help_text='Whether community is active')),
                ('requires_approval', models.BooleanField(default=False, help_text='Whether joining requires moderator approval')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='community_avatars/')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='community_banners/')),
                ('member_count', models.IntegerField(default=0)),
                ('session_count', models.IntegerField(default=0)),
                ('article_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Communities',
                'db_table': 'communities_community',
                'ordering': ['-member_count'],
            },
        ),
        migrations.CreateModel(
            name='CommunityArticle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Article title', max_length=255)),
                ('content', models.TextField(help_text='Article content')),
                ('excerpt', models.TextField(blank=True, help_text='Short excerpt/summary of the article')),
                ('tags', models.JSONField(blank=True, default=list, help_text='List of tags for the article')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('view_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Community Article',
                'verbose_name_plural': 'Community Articles',
                'db_table': 'communities_article',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('sessions_attended', models.IntegerField(default=0)),
                ('sessions_hosted', models.IntegerField(default=0)),
                ('articles_published', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Community Member',
                'verbose_name_plural': 'Community Members',
                'db_table': 'communities_member',
            },
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_type', models.CharField(choices=[('discussion', 'Discussion'), ('question', 'Question'), ('announcement', 'Announcement'), ('resource', 'Resource Share')], default='discussion', max_length=20)),
                ('title', models.CharField(help_text='Post title', max_length=255)),
                ('content', models.TextField(help_text='Post content')),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('like_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community Post',
                'verbose_name_plural': 'Community Posts',
                'db_table': 'communities_post',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Topic title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Topic description')),
                ('is_pinned', models.BooleanField(default=False, help_text='Whether topic is pinned')),
                ('is_locked', models.BooleanField(default=False, help_text='Whether topic is locked for new posts')),
                ('post_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='communities.community')),
            ],
            options={
                'verbose_name': 'Community Topic',
                'verbose_name_plural': 'Community Topics',
                'db_table': 'communities_topic',
                'ordering': ['-is_pinned', '-updated_at'],
            },
        ),
    ]
